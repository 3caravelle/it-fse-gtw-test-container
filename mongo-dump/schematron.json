[{
  "_id": {
    "$oid": "6387a6e1cb5b861312d95fa2"
  },
  "name_schematron": "schematron_LDO_v4.8.sch",
  "content_schematron": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "version": "3.0",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.5",
  "last_update_date": {
    "$date": {
      "$numberLong": "1669834465329"
    }
  },
  "deleted": false,
  "last_sync": {
    "$date": {
      "$numberLong": "1669834639781"
    }
  }
},{
  "_id": {
    "$oid": "6387a6e1cb5b861312d95fa3"
  },
  "name_schematron": "schematron_LAB_v17.sch",
  "content_schematron": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "version": "3.0",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.1",
  "last_update_date": {
    "$date": {
      "$numberLong": "1669834464970"
    }
  },
  "deleted": false,
  "last_sync": {
    "$date": {
      "$numberLong": "1669834639781"
    }
  }
},{
  "_id": {
    "$oid": "6387a6ebcb5b861312d95fa4"
  },
  "name_schematron": "schematron_PSS_v2.7.sch",
  "content_schematron": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "version": "3.0",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.4.1.1",
  "last_update_date": {
    "$date": {
      "$numberLong": "1669834475260"
    }
  },
  "deleted": false,
  "last_sync": {
    "$date": {
      "$numberLong": "1669834639781"
    }
  }
},{
  "_id": {
    "$oid": "6387a6eccb5b861312d95fa5"
  },
  "name_schematron": "schematron_RAD_v3.0.sch",
  "content_schematron": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "version": "3.0",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.7.1",
  "last_update_date": {
    "$date": {
      "$numberLong": "1669834476737"
    }
  },
  "deleted": false,
  "last_sync": {
    "$date": {
      "$numberLong": "1669834639781"
    }
  }
},{
  "_id": {
    "$oid": "6387a6eecb5b861312d95fa6"
  },
  "name_schematron": "schematron_RSA_v7.3.sch",
  "content_schematron": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "version": "3.0",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.9.1",
  "last_update_date": {
    "$date": {
      "$numberLong": "1669834478746"
    }
  },
  "deleted": false,
  "last_sync": {
    "$date": {
      "$numberLong": "1669834639781"
    }
  }
},{
  "_id": {
    "$oid": "6387a6f0cb5b861312d95fa7"
  },
  "name_schematron": "schematron_SING_VACC_v2.2.sch",
  "content_schematron": {
    "$binary": {
      "base64": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNjaGVtYSB4bWxucz0iaHR0cDovL3B1cmwub2NsYy5vcmcvZHNkbC9zY2hlbWF0cm9uIiAKCQl4bWxuczpjZGE9InVybjpobDctb3JnOnYzIgogICAgICAgIHhtbG5zOmlzbz0iaHR0cDovL3B1cmwub2NsYy5vcmcvZHNkbC9zY2hlbWF0cm9uIgogICAgICAgIHhtbG5zOnNjaD0iaHR0cDovL3d3dy5hc2NjLm5ldC94bWwvc2NoZW1hdHJvbiIKICAgICAgICBxdWVyeUJpbmRpbmc9InhzbHQyIj4KCTx0aXRsZT5TY2hlbWF0cm9uIFNjaGVkYSBkZWxsYSBTaW5nb2xhIFZhY2NpbmF6aW9uZSAxLjEgPC90aXRsZT4KCTxucyBwcmVmaXg9ImhsNyIgdXJpPSJ1cm46aGw3LW9yZzp2MyIvPgoJPG5zIHByZWZpeD0ieHNpIiB1cmk9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIi8+CQoJPHBhdHRlcm4gaWQ9ImFsbCI+CgkKCQoJPCEtLV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX0hFQURFUiBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18tLT4KCgoJPCEtLSBDbGluaWNhbERvY3VtZW50IC0tPgoJCTxydWxlIGNvbnRleHQ9ImhsNzpDbGluaWNhbERvY3VtZW50Ij4KCSAgICAgICAgPCEtLUNvbnRyb2xsbyByZWFsbUNvZGUtLT4JCgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnJlYWxtQ29kZSk+PTEiCgkJCT5FUlJPUkUtMXwgTCdlbGVtZW50byA8bmFtZS8+IERFVkUgYXZlcmUgYWxtZW5vIHVuIGVsZW1lbnRvICdyZWFsbUNvZGUnPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnJlYWxtQ29kZVtAY29kZT0nSVQnXSk9IDEiCgkJCT5FUlJPUkUtMnwgTCdlbGVtZW50byA8bmFtZS8+L3JlYWxtQ29kZSBERVZFIGF2ZXJlIGwnYXR0cmlidXRvIEBjb2RlIHZhbG9yaXp6YXRvIGNvbWUgJ0lUJzwvYXNzZXJ0PgoJCQkKCQkJPCEtLUNvbnRyb2xsbyB0ZW1wbGF0ZUlkLS0+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnRlbXBsYXRlSWQpPj0xIgoJCQk+RVJST1JFLTN8IEwnZWxlbWVudG8gPG5hbWUvPiBERVZFIGF2ZXJlIGFsbWVubyB1biBlbGVtZW50byBkaSB0aXBvICd0ZW1wbGF0ZUlkJzwvYXNzZXJ0PgoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS4xLjEnXSk9IDEgYW5kICBjb3VudChobDc6dGVtcGxhdGVJZC9AZXh0ZW5zaW9uKT0gMSIKCQkJPkVSUk9SRS00fCBBbG1lbm8gdW4gZWxlbWVudG8gPG5hbWUvPi90ZW1wbGF0ZUlkIERFVkUgZXNzZXJlIHZhbG9yaXp6YXRvIGF0dHJhdmVyc28gbCdhdHRyaWJ1dG8gQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjEuMScsIGFzc29jaWF0byBhbGwnYXR0cmlidXRvIEBleHRlbnNpb24gY2hlICBpbmRpY2EgbGEgdmVyc2lvbmUgYSBjdWkgaWwgdGVtcGxhdGVJZCBmYSByaWZlcmltZW50bzwvYXNzZXJ0PgoJCQkKCQkJPCEtLUNvbnRyb2xsbyBjb2RlLS0+CQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpjb2RlW0Bjb2RlPSc4NzI3My05J11bQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMSddKSA9IDEiCgkJCT5FUlJPUkUtNXwgTCdlbGVtZW50byA8bmFtZS8+L2NvZGUgREVWRSBlc3NlcmUgdmFsb3JpenphdG8gY29uIGwnYXR0cmlidXRvIEBjb2RlPSc4NzI3My05JyBlIGlsIEBjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEnPC9hc3NlcnQ+CgkKCQkJPHJlcG9ydCB0ZXN0PSJub3QoY291bnQoaGw3OmNvZGVbQGNvZGVTeXN0ZW1OYW1lPSdMT0lOQyddKT0xKSBvciBub3QoY291bnQoaGw3OmNvZGVbQGRpc3BsYXlOYW1lPSdJbW11bml6YXRpb24gTm90ZSddKT0xIG9yCgkJCWNvdW50KGhsNzpjb2RlW0BkaXNwbGF5TmFtZT0nSU1NVU5JWkFUSU9OIE5PVEUnXSk9MSBvciBjb3VudChobDc6Y29kZVtAZGlzcGxheU5hbWU9J0ltbXVuaXphdGlvbiBub3RlJ10pPTEgb3IgY291bnQoaGw3OmNvZGVbQGRpc3BsYXlOYW1lPScgSW1tdW5pemF0aW9uIG5vdGUnXSk9MSkiCgkJCT5XMDAxfCBTaSByYWNjb21hbmRhIGRpIHZhbG9yaXp6YXJlIGdsaSBhdHRyaWJ1dGkgZGVsbCdlbGVtZW50byA8bmFtZS8+L2NvZGUgbmVsIHNlZ3VlbnRlIG1vZG86IEBjb2RlU3lzdGVtTmFtZSA9J0xPSU5DJyBlIEBkaXNwbGF5TmFtZSA9J0ltbXVuaXphdGlvbiBOb3RlJy0tPiA8L3JlcG9ydD4KCQkJCgkJCTwhLS1Db250cm9sbG8gY29uZmlkZW50aWFsaXR5Q29kZS0tPgoJCQk8YXNzZXJ0IHRlc3Q9Iihjb3VudChobDc6Y29uZmlkZW50aWFsaXR5Q29kZVtAY29kZT0nTiddW0Bjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My41LjI1J10pPSAxKSBvciAKCQkJKGNvdW50KGhsNzpjb25maWRlbnRpYWxpdHlDb2RlW0Bjb2RlPSdWJ11bQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjUuMjUnXSk9IDEpIgoJCQk+RVJST1JFLTZ8IEwnZWxlbWVudG8gPG5hbWUvPi9jb25maWRlbnRpYWxpdHlDb2RlIERFVkUgYXZlcmUgbCdhdHRyaWJ1dG8gQGNvZGUgdmFsb3JpenphdG8gY29uICdOJyBvICdWJywgZSBpbCBAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNS4yNSc8L2Fzc2VydD4KCQkJCgkJCTwhLS1Db250cm9sbG8gbGFuZ3VhZ2VDb2RlLS0+CQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpsYW5ndWFnZUNvZGUpPTEiCgkJCT5FUlJPUkUtN3wgTCdlbGVtZW50byA8bmFtZS8+IERFVkUgY29udGVuZXJlIHVuIGVsZW1lbnRvICdsYW5ndWFnZUNvZGUnIDwvYXNzZXJ0PgoJCQkKCQkJPCEtLUNvbnRyb2xsbyBpbmNyb2NpYXRvIHRyYSBzZXRJZC12ZXJzaW9uTnVtYmVyIGUgcmVsYXRlZERvY3VtZW50LS0+CgkJCTxsZXQgbmFtZT0idmVyc2lvbk51bWJlciIgdmFsdWU9ImhsNzp2ZXJzaW9uTnVtYmVyL0B2YWx1ZSIvPgoJCQk8YXNzZXJ0IHRlc3Q9IihzdHJpbmcobnVtYmVyKCR2ZXJzaW9uTnVtYmVyKSkgPSAnTmFOJykgb3IKCQkJCQkoJHZlcnNpb25OdW1iZXI9IDEgYW5kIGhsNzppZC9Acm9vdCA9IGhsNzpzZXRJZC9Acm9vdCBhbmQgaGw3OmlkL0BleHRlbnNpb24gPSBobDc6c2V0SWQvQGV4dGVuc2lvbikgb3IKCQkJCQkoJHZlcnNpb25OdW1iZXIhPSAnMScgYW5kIGhsNzppZC9Acm9vdCA9IGhsNzpzZXRJZC9Acm9vdCBhbmQgaGw3OmlkL0BleHRlbnNpb24gIT0gaGw3OnNldElkL0BleHRlbnNpb24pIG9yCgkJCQkJKGhsNzppZC9Acm9vdCAhPSBobDc6c2V0SWQvQHJvb3QpIgoJCQk+RVJST1JFLTh8IFNlIENsaW5pY2FsRG9jdW1lbnQuaWQgZSBDbGluaWNhbERvY3VtZW50LnNldElkIHVzYW5vIGxvIHN0ZXNzbyBkb21pbmlvIGRpIGlkZW50aWZpY2F6aW9uZSAoQHJvb3QgaWRlbnRpY28pIGFsbG9yYSBs4oCZYXR0cmlidXRvIEBleHRlbnNpb24gZGVsIENsaW5pY2FsRG9jdW1lbnQuaWQgCgkJCWRldmUgZXNzZXJlIGRpdmVyc28gZGEgcXVlbGxvIGRlbCBDbGluaWNhbERvY3VtZW50LnNldElkIGEgbWVubyBjaGUgQ2xpbmljYWxEb2N1bWVudC52ZXJzaW9uTnVtYmVyIG5vbiBzaWEgdWd1YWxlIGFkIDE7IGNpb8OoIGkgdmFsb3JpIGRpIHNldElkIGVkIGlkIHBlciB1biBkb2N1bWVudG8gY2xpbmljbyBwb3Nzb25vIGNvaW5jaWRlcmUgc29sbyBwZXIgbGEgcHJpbWEgdmVyc2lvbmUgZGkgdW4gZG9jdW1lbnRvPC9hc3NlcnQ+CgkJCQoJCQk8YXNzZXJ0IHRlc3Q9IihzdHJpbmcobnVtYmVyKCR2ZXJzaW9uTnVtYmVyKSkgPSdOYU4nKSBvcgoJCQkJCQkgICgkdmVyc2lvbk51bWJlcj0xKSBvciAKCQkJCQkJICAoKCR2ZXJzaW9uTnVtYmVyICZndDsxKSBhbmQgY291bnQoaGw3OnJlbGF0ZWREb2N1bWVudCk9MSkiCgkJCT5FUlJPUkUtOXwgU2UgbCdhdHRyaWJ1dG8gPG5hbWUvPi92ZXJzaW9uTnVtYmVyL0B2YWx1ZSDDqCBtYWdnaW9yZSBkaSAxLCBsJ2VsZW1lbnRvIDxuYW1lLz4gIGRldmUgY29udGVuZXJlIHVuIGVsZW1lbnRvIGRpIHRpcG8gJ3JlbGF0ZWREb2N1bWVudCc8L2Fzc2VydD4KCQkJCgkJCTwhLS1Db250cm9sbG8gcmVjb3JkVGFyZ2V0LS0+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnJlY29yZFRhcmdldCk9MSIKCQkJPkVSUk9SRS0xMHwgTCdlbGVtZW50byA8bmFtZS8+IERFVkUgY29udGVuZXJlIHVuIHNvbG8gZWxlbWVudG8gJ3JlY29yZFRhcmdldCcgPC9hc3NlcnQ+CgkJCQogICAgICAgICAgICA8IS0tQ29udHJvbGxvIHJlY29yZFRhcmdldC9wYXRpZW50Um9sZS9pZC0tPgkKCQkJPCEtLXJlcG9ydCB0ZXN0PSJub3QoY291bnQoaGw3OnJlY29yZFRhcmdldC9obDc6cGF0aWVudFJvbGUvaGw3OmlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuNC4zLjInXSk9MSkgYW5kCgkJCW5vdChjb3VudChobDc6cmVjb3JkVGFyZ2V0L2hsNzpwYXRpZW50Um9sZS9obDc6aWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuNyddKT0xKSBhbmQgCgkJCW5vdChjb3VudChobDc6cmVjb3JkVGFyZ2V0L2hsNzpwYXRpZW50Um9sZS9obDc6aWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuMyddKT0xKSBhbmQgCgkJCW5vdChjb3VudChobDc6cmVjb3JkVGFyZ2V0L2hsNzpwYXRpZW50Um9sZS9obDc6aWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuMTgnXSk9MSkgYW5kCgkJCW5vdChjb3VudChobDc6cmVjb3JkVGFyZ2V0L2hsNzpwYXRpZW50Um9sZS9obDc6aWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuMTcnXSk9MSkgYW5kCgkJCW5vdChjb3VudChobDc6cmVjb3JkVGFyZ2V0L2hsNzpwYXRpZW50Um9sZS9obDc6aWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuMTUnXSk9MSkiCgkJCT5XMDAyfCBTaSBzaSBjb25zaWdsaWEgZGkgdmFsb3JpenphcmUgbCdlbGVtZW50byByZWNvcmRUYXJnZXQvcGF0aWVudFJvbGUvaWQgIGNvbiB1bmEgIGRlbGxlIHNlZ3VlbnRpIGluZm9ybWF6aW9uaToKCQkJQ0YgMi4xNi44NDAuMS4xMTM4ODMuMi45LjQuMy4yCgkJCVRFQU0gMi4xNi44NDAuMS4xMTM4ODMuMi45LjQuMy43IG8gMi4xNi44NDAuMS4xMTM4ODMuMi45LjQuMy4zCgkJCUVOSSAyLjE2Ljg0MC4xLjExMzg4My4yLjkuNC4zLjE4CgkJCVNUUCAyLjE2Ljg0MC4xLjExMzg4My4yLjkuNC4zLjE3CgkJCUFOQSAyLjE2Ljg0MC4xLjExMzg4My4yLjkuNC4zLjE1LiAKCQkJPC9yZXBvcnQtLT4KCQkJCgkJCTwhLS1Db250cm9sbG8gcmVjb3JkVGFyZ2V0L3BhdGllbnRSb2xlL2FkZHItLT4KCQkJPGxldCBuYW1lPSJudW1fYWRkciIgdmFsdWU9ImNvdW50KGhsNzpyZWNvcmRUYXJnZXQvaGw3OnBhdGllbnRSb2xlL2hsNzphZGRyKSIvPgoJCQk8YXNzZXJ0IHRlc3Q9IiRudW1fYWRkcj0wIG9yIChjb3VudChobDc6cmVjb3JkVGFyZ2V0L2hsNzpwYXRpZW50Um9sZS9obDc6YWRkci9obDc6Y291bnRyeSk9JG51bV9hZGRyIGFuZCAKCQkJY291bnQoaGw3OnJlY29yZFRhcmdldC9obDc6cGF0aWVudFJvbGUvaGw3OmFkZHIvaGw3OmNpdHkpPSRudW1fYWRkciBhbmQgCgkJCWNvdW50KGhsNzpyZWNvcmRUYXJnZXQvaGw3OnBhdGllbnRSb2xlL2hsNzphZGRyL2hsNzpzdHJlZXRBZGRyZXNzTGluZSk9JG51bV9hZGRyKSIKCQkJPkVSUk9SRS0xMXwgTCdlbGVtZW50byA8bmFtZS8+L3JlY29yZFRhcmdldC9wYXRpZW50Um9sZS9hZGRyIERFVkUgcmlwb3J0YXJlIGkgc290dG8tZWxlbWVudGkgJ2NvdW50cnknLCAnY2l0eScgZSAnc3RyZWV0QWRkcmVzc0xpbmUnIDwvYXNzZXJ0PgoJCQkKCQkgICAgPCEtLUNvbnRyb2xsbyByZWNvcmRUYXJnZXQvcGF0aWVudFJvbGUvcGF0aWVudC9uYW1lLS0+CgkJCTxsZXQgbmFtZT0icGF0aWVudCIgdmFsdWU9ImhsNzpyZWNvcmRUYXJnZXQvaGw3OnBhdGllbnRSb2xlL2hsNzpwYXRpZW50Ii8+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoJHBhdGllbnQpPTEgIgoJCQk+RVJST1JFLTEyfCBMJ2VsZW1lbnRvIDxuYW1lLz4vcmVjb3JkVGFnZXQvcGF0aWVudFJvbGUgREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byBwYXRpZW50PC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoJHBhdGllbnQpPTAgb3IgY291bnQoJHBhdGllbnQvaGw3Om5hbWUpPTEiCgkJCT5FUlJPUkUtMTN8IEwnZWxlbWVudG8gPG5hbWUvPi9yZWNvcmRUYWdldC9wYXRpZW50Um9sZS9wYXRpZW50IERFVkUgY29udGVuZXJlIGwnZWxlbWVudG8gJ25hbWUnPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoJHBhdGllbnQpPTAgb3IgKGNvdW50KCRwYXRpZW50L2hsNzpuYW1lL2hsNzpnaXZlbik9MSBhbmQgY291bnQoJHBhdGllbnQvaGw3Om5hbWUvaGw3OmZhbWlseSk9MSkiCgkJCT5FUlJPUkUtMTR8IEwnZWxlbWVudG8gPG5hbWUvPi9yZWNvcmRUYWdldC9wYXRpZW50Um9sZS9wYXRpZW50L25hbWUgREVWRSByaXBvcnRhcmUgZ2xpIGVsZW1lbnRpICdnaXZlbicgZSAnZmFtaWx5JzwvYXNzZXJ0PgoJCQkKCQkJPCEtLUNvbnRyb2xsbyByZWNvcmRUYXJnZXQvcGF0aWVudFJvbGUvcGF0aWVudC9hZG1pbmlzdHJhdGl2ZUdlbmRlckNvZGUtLT4KCQkJPGxldCBuYW1lPSJnZW5kZXJPSUQiIHZhbHVlPSJobDc6cmVjb3JkVGFyZ2V0L2hsNzpwYXRpZW50Um9sZS9obDc6cGF0aWVudC9obDc6YWRtaW5pc3RyYXRpdmVHZW5kZXJDb2RlL0Bjb2RlU3lzdGVtIi8+CgkJCQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KCRwYXRpZW50KT0wIG9yIGNvdW50KGhsNzpyZWNvcmRUYXJnZXQvaGw3OnBhdGllbnRSb2xlL2hsNzpwYXRpZW50L2hsNzphZG1pbmlzdHJhdGl2ZUdlbmRlckNvZGUpPTEiCgkJCT5FUlJPUkUtMTV8IEwnYXR0cmlidXRvIDxuYW1lLz4vcmVjb3JkVGFyZ2V0L3BhdGllbnRSb2xlL3BhdGllbnQgREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byBhZG1pbmlzdHJhdGl2ZUdlbmRlckNvZGUgPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoJHBhdGllbnQpPTAgb3IgJGdlbmRlck9JRD0nMi4xNi44NDAuMS4xMTM4ODMuNS4xJyIKCQkJPkVSUk9SRS0xNnwgTCdPSUQgYXNzZWduYXRvIGFsbCdhdHRyaWJ1dG8gPG5hbWUvPi9yZWNvcmRUYXJnZXQvcGF0aWVudFJvbGUvcGF0aWVudC9hZG1pbmlzdHJhdGl2ZUdlbmRlckNvZGUvQGNvZGVTeXN0ZW09Jzx2YWx1ZS1vZiBzZWxlY3Q9IiRnZW5kZXJPSUQiLz4nIG5vbiDDqCBjb3JyZXR0by4gTCdhdHRyaWJ1dG8gREVWRSBlc3NlcmUgdmFsb3JpenphdG8gY29uICcyLjE2Ljg0MC4xLjExMzg4My41LjEnIDwvYXNzZXJ0PgoJCQkKCQkJCgkJCTwhLS1Db250cm9sbG8gcmVjb3JkVGFyZ2V0L3BhdGllbnRSb2xlL3BhdGllbnQvYmlydGhUaW1lLS0+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoJHBhdGllbnQpPTAgb3IKCQkJKGNvdW50KGhsNzpyZWNvcmRUYXJnZXQvaGw3OnBhdGllbnRSb2xlL2hsNzppZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjQuMy4yJyBvciAKCQkJQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuNycgb3IgQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuMycgb3IgCgkJCUByb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuNC4zLjE3J10pPTApIG9yIAoJCQljb3VudChobDc6cmVjb3JkVGFyZ2V0L2hsNzpwYXRpZW50Um9sZS9obDc6cGF0aWVudC9obDc6YmlydGhUaW1lKT0xIgoJCQk+RVJST1JFLTE3fCBMJ2VsZW1lbnRvIDxuYW1lLz4vcmVjb3JkVGFnZXQvcGF0aWVudFJvbGUvcGF0aWVudCBERVZFIHJpcG9ydGFyZSB1biBlbGVtZW50byAnYmlydGhUaW1lJzwvYXNzZXJ0PgoJCQkKCQkJCgkJCTwhLS1Db250cm9sbG8gcmVjb3JkVGFyZ2V0L3BhdGllbnRSb2xlL3BhdGllbnQvYmlydGhwbGFjZS9wbGFjZS9hZGRyLS0+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnJlY29yZFRhcmdldC9obDc6cGF0aWVudFJvbGUvaGw3OnBhdGllbnQvaGw3OmJpcnRocGxhY2UpPTAgb3IgCgkJCWNvdW50KGhsNzpyZWNvcmRUYXJnZXQvaGw3OnBhdGllbnRSb2xlL2hsNzpwYXRpZW50L2hsNzpiaXJ0aHBsYWNlL2hsNzpwbGFjZS9obDc6YWRkcik9MSIKCQkJPkVSUk9SRS0xOHwgTCdlbGVtZW50byA8bmFtZS8+L3JlY29yZFRhcmdldC9wYXRpZW50Um9sZS9wYXRpZW50L2JpcnRocGxhY2UgREVWRSBjb250ZW5lcmUgdW4gZWxlbWVudG8gcGxhY2UvYWRkciA8L2Fzc2VydD4JCgkJCQoJCQkKCQkJCgkJCQoJCQk8IS0tQ29udHJvbGxvIGF1dGhvci9hc3NpZ25lZEF1dGhvci9pZC0tPgoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzphdXRob3IvaGw3OmFzc2lnbmVkQXV0aG9yL2hsNzppZC9AbnVsbEZsYXZvcik9MSBvciAKCQkJY291bnQoaGw3OmF1dGhvci9obDc6YXNzaWduZWRBdXRob3IvaGw3OmlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuNC4zLjInXSk9MSIKCQkJPkVSUk9SRS0xOXwgTCdlbGVtZW50byA8bmFtZS8+L2F1dGhvci9hc3NpZ25lZEF1dGhvciBERVZFIGNvbnRlbmVyZSBhbG1lbm8gdW4gZWxlbWVudG8gJ2lkJyBjb24gaWwgcmVsYXRpdm8gYXR0cmlidXRvIEByb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuNC4zLjInPC9hc3NlcnQ+CgkJCQkJCQoKCQkJCQkJCgkJCTwhLS1Db250cm9sbG8gYXV0aG9yL2Fzc2lnbmVkQXV0aG9yL2Fzc2lnbmVkUGVyc29uL25hbWUtLT4KCQkJPGxldCBuYW1lPSJuYW1lX2F1dGhvciIgdmFsdWU9ImhsNzphdXRob3IvaGw3OmFzc2lnbmVkQXV0aG9yL2hsNzphc3NpZ25lZFBlcnNvbiIvPgoJCQoJCSAgICA8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzphdXRob3IvaGw3OmFzc2lnbmVkQXV0aG9yL2hsNzppZC9AbnVsbEZsYXZvcik9MSBvciBjb3VudCgkbmFtZV9hdXRob3IvaGw3Om5hbWUpPTEiCgkJCT5FUlJPUkUtMjB8IEwnZWxlbWVudG8gPG5hbWUvPi9hdXRob3IvYXNzaWduZWRBdXRob3IvYXNzaWduZWRQZXJzb24gREVWRSBhdmVyZSBsJ2VsZW1lbnRvICduYW1lJyA8L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6YXV0aG9yL2hsNzphc3NpZ25lZEF1dGhvci9obDc6aWQvQG51bGxGbGF2b3IpPTEgb3IgY291bnQoJG5hbWVfYXV0aG9yL2hsNzpuYW1lKT0wIG9yCgkJCShjb3VudCgkbmFtZV9hdXRob3IvaGw3Om5hbWUvaGw3OmdpdmVuKT0xIGFuZCBjb3VudCgkbmFtZV9hdXRob3IvaGw3Om5hbWUvaGw3OmZhbWlseSk9MSkiCgkJCT5FUlJPUkUtMjF8IEwnZWxlbWVudG8gPG5hbWUvPi9hdXRob3IvYXNzaWduZWRBdXRob3IvYXNzaWduZWRQZXJzb24vbmFtZSBERVZFIGF2ZXJlIGdsaSBlbGVtZW50aSAnZ2l2ZW4nIGUgJ2ZhbWlseSc8L2Fzc2VydD4KCQkKCQkJPGxldCBuYW1lPSJudW1fYWRkcl9hdXRoIiB2YWx1ZT0iY291bnQoaGw3OmF1dGhvci9obDc6YXNzaWduZWRBdXRob3IvaGw3OnJlcHJlc2VudGVkT3JnYW5pemF0aW9uL2hsNzphZGRyKSIvPgoJCQk8bGV0IG5hbWU9ImFkZHJfYXV0aCIgdmFsdWU9ImhsNzphdXRob3IvaGw3OmFzc2lnbmVkQXV0aG9yL2hsNzpyZXByZXNlbnRlZE9yZ2FuaXphdGlvbi9obDc6YWRkciIvPgoJCQk8YXNzZXJ0IHRlc3Q9IiRudW1fYWRkcl9hdXRoPTAgb3IgKGNvdW50KCRhZGRyX2F1dGgvaGw3OmNvdW50cnkpPSRudW1fYWRkcl9hdXRoIGFuZAoJCQljb3VudCgkYWRkcl9hdXRoL2hsNzpjaXR5KT0kbnVtX2FkZHJfYXV0aCBhbmQgCgkJCWNvdW50KCRhZGRyX2F1dGgvaGw3OnN0cmVldEFkZHJlc3NMaW5lKT0kbnVtX2FkZHJfYXV0aCkiCgkJCT5FUlJPUkUtMjJ8IEwnZWxlbWVudG8gPG5hbWUvPi9hdXRob3IvYXNzaWduZWRBdXRob3IvcmVwcmVzZW50ZWRPcmdhbml6YXRpb24vYWRkciBERVZFIHJpcG9ydGFyZSBpIHNvdHRvLWVsZW1lbnRpICdjb3VudHJ5JywnY2l0eScgZSAnc3RyZWV0QWRkcmVzc0xpbmUnPC9hc3NlcnQ+CgkJCQoJCQkKCQkJCgkJICAgIDwhLS1Db250cm9sbG8gQ2xpbmljYWxEb2N1bWVudC9jdXN0b2RpYW4vYXNzaWduZWRDdXN0b2RpYW4vcmVwcmVzZW50ZWRDdXN0b2RpYW5Pcmdhbml6YXRpb24tLT4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6Y3VzdG9kaWFuL2hsNzphc3NpZ25lZEN1c3RvZGlhbi9obDc6cmVwcmVzZW50ZWRDdXN0b2RpYW5Pcmdhbml6YXRpb24vaGw3Om5hbWUpPTEiCgkJCT5FUlJPUkUtMjN8IDxuYW1lLz4vY3VzdG9kaWFuL2Fzc2lnbmVkQ3VzdG9kaWFuL3JlcHJlc2VudGVkQ3VzdG9kaWFuT3JnYW5pemF0aW9uIGRldmUgY29udGVuZXJlIHVuIGVsZW1lbnRvICduYW1lJzwvYXNzZXJ0PgoJCQkKCQkJPGxldCBuYW1lPSJudW1fYWRkcl9jdXN0IiB2YWx1ZT0iY291bnQoaGw3OmN1c3RvZGlhbi9obDc6YXNzaWduZWRDdXN0b2RpYW4vaGw3OnJlcHJlc2VudGVkQ3VzdG9kaWFuT3JnYW5pemF0aW9uL2hsNzphZGRyKSIvPgoJCQk8bGV0IG5hbWU9ImFkZHJfY3VzdCIgdmFsdWU9ImhsNzpjdXN0b2RpYW4vaGw3OmFzc2lnbmVkQ3VzdG9kaWFuL2hsNzpyZXByZXNlbnRlZEN1c3RvZGlhbk9yZ2FuaXphdGlvbi9obDc6YWRkciIvPgoJCQk8YXNzZXJ0IHRlc3Q9IiRudW1fYWRkcl9jdXN0PTAgb3IgKGNvdW50KCRhZGRyX2N1c3QvaGw3OmNvdW50cnkpPSRudW1fYWRkcl9jdXN0IGFuZCBjb3VudCgkYWRkcl9jdXN0L2hsNzpjaXR5KT0kbnVtX2FkZHJfY3VzdCBhbmQgY291bnQoJGFkZHJfY3VzdC9obDc6c3RyZWV0QWRkcmVzc0xpbmUpPSRudW1fYWRkcl9jdXN0KSIKCQkJPkVSUk9SRS0yNHwgTCdlbGVtZW50byA8bmFtZS8+L2N1c3RvZGlhbi9hc3NpZ25lZEN1c3RvZGlhbi9yZXByZXNlbnRlZEN1c3RvZGlhbk9yZ2FuaXphdGlvbi9hZGRyIERFVkUgcmlwb3J0YXJlIGkgc290dG8tZWxlbWVudGkgJ2NvdW50cnknLCdjaXR5JyBlICdzdHJlZXRBZGRyZXNzTGluZSc8L2Fzc2VydD4KCQkJCgkJCQoJCQk8IS0tQ29udHJvbGxvIGxlZ2FsQXV0aGVudGljYXRvci0tPgoJCQk8YXNzZXJ0IHRlc3QgPSAiKGNvdW50KGhsNzpsZWdhbEF1dGhlbnRpY2F0b3IpJmx0Oz0xKSIgCgkJCT5FUlJPUkUtMjV8IEwnZWxlbWVudG8gPG5hbWUvPi9sZWdhbEF1dGhlbnRpY2F0b3IgcHXDsiBlc3NlcmUgcHJlc2VudGUgdW5hIHZvbHRhIHNvbGE8L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0ID0gImNvdW50KGhsNzpsZWdhbEF1dGhlbnRpY2F0b3IpPTAgb3IgY291bnQoaGw3OmxlZ2FsQXV0aGVudGljYXRvci9obDc6c2lnbmF0dXJlQ29kZVtAY29kZT0nUyddKT0xIiAKCQkJPkVSUk9SRS0yNnwgTCdlbGVtZW50byA8bmFtZS8+L2xlZ2FsQXV0aGVudGljYXRvci9zaWduYXR1cmVDb2RlIGRldmUgZXNzZXJlIHZhbG9yaXp6YXRvIGNvbiBpbCBjb2RpY2UgIlMiIDwvYXNzZXJ0PgoJCQk8YXNzZXJ0IHRlc3QgPSAiY291bnQoaGw3OmxlZ2FsQXV0aGVudGljYXRvcik9MCBvciBjb3VudChobDc6bGVnYWxBdXRoZW50aWNhdG9yL2hsNzphc3NpZ25lZEVudGl0eS9obDc6aWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuMiddKT0xIgoJCQk+RVJST1JFLTI3fCBMJ2VsZW1lbnRvIDxuYW1lLz4vbGVnYWxBdXRoZW50aWNhdG9yL2Fzc2lnbmVkRW50aXR5IERFVkUgY29udGVuZXJlIGFsbWVubyB1biBlbGVtZW50byBpZCB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS40LjMuMic8L2Fzc2VydD4KCQkJCgkJCTxhc3NlcnQgdGVzdCA9ICJjb3VudChobDc6bGVnYWxBdXRoZW50aWNhdG9yL2hsNzphc3NpZ25lZEVudGl0eS9obDc6YXNzaWduZWRQZXJzb24vaGw3Om5hbWUpPTAKCQkJb3IgKGNvdW50KGhsNzpsZWdhbEF1dGhlbnRpY2F0b3IvaGw3OmFzc2lnbmVkRW50aXR5L2hsNzphc3NpZ25lZFBlcnNvbi9obDc6bmFtZS9obDc6ZmFtaWx5KT0xIGFuZCAKCQkJY291bnQoaGw3OmxlZ2FsQXV0aGVudGljYXRvci9obDc6YXNzaWduZWRFbnRpdHkvaGw3OmFzc2lnbmVkUGVyc29uL2hsNzpuYW1lL2hsNzpnaXZlbik9MSkiCgkJCT5FUlJPUkUtMjh8IEwnZWxlbWVudG8gPG5hbWUvPi9sZWdhbEF1dGhlbnRpY2F0b3IvYXNzaWduZWRFbnRpdHkvYXNzaWduZWRQZXJzb24vbmFtZSBERVZFIHJpcG9ydGFyZSBnbGkgZWxlbWVudGkgJ2dpdmVuJyBlICdmYW1pbHknPC9hc3NlcnQ+CgkJCQoJCQk8IS0tQ29udHJvbGxvIFBhcnRpY2lwYW50LS0+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnBhcnRpY2lwYW50KT0wIG9yIGNvdW50KGhsNzpwYXJ0aWNpcGFudC9obDc6YXNzb2NpYXRlZEVudGl0eS9obDc6aWQpPj0xIgoJCQk+RVJST1JFLTI5fCBMJ2VsZW1lbnRvIDxuYW1lLz4vcGFydGljaXBhbnQvYXNzb2NpYXRlZEVudGl0eSBkZXZlIGNvbnRlbmVyZSBsJ2VsZW1lbnRvICdpZCc8L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6cGFydGljaXBhbnQvaGw3OmFzc29jaWF0ZWRFbnRpdHkvaGw3OmFzc29jaWF0ZWRQZXJzb24pPTAgb3IgY291bnQoaGw3OnBhcnRpY2lwYW50L2hsNzphc3NvY2lhdGVkRW50aXR5L2hsNzphc3NvY2lhdGVkUGVyc29uL2hsNzpuYW1lKT0xIgoJCQk+RVJST1JFLTMwfCBMJ2VsZW1lbnRvIDxuYW1lLz4vcGFydGljaXBhbnQvYXNzb2NpYXRlZEVudGl0eS9hc3NvY2lhdGVkUGVyc29uIGRldmUgY29udGVuZXJlIGwnZWxlbWVudG8gJ25hbWUnPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnBhcnRpY2lwYW50L2hsNzphc3NvY2lhdGVkRW50aXR5L2hsNzphc3NvY2lhdGVkUGVyc29uKT0wIAoJCQlvcihjb3VudChobDc6cGFydGljaXBhbnQvaGw3OmFzc29jaWF0ZWRFbnRpdHkvaGw3OmFzc29jaWF0ZWRQZXJzb24vaGw3Om5hbWUvaGw3OmZhbWlseSk9MSBhbmQgY291bnQoaGw3OnBhcnRpY2lwYW50L2hsNzphc3NvY2lhdGVkRW50aXR5L2hsNzphc3NvY2lhdGVkUGVyc29uL2hsNzpuYW1lL2hsNzpnaXZlbik9MSkiCgkJCT5FUlJPUkUtMzF8IEwnZWxlbWVudG8gPG5hbWUvPi9wYXJ0aWNpcGFudC9hc3NvY2lhdGVkRW50aXR5L2Fzc29jaWF0ZWRQZXJzb24vbmFtZSBkZXZlIGNvbnRlbmVyZSBnbGkgZWxlbWVudGkgJ2dpdmVuJyBlICdmYW1pbHknPC9hc3NlcnQ+CgkJCQoJCQkKCQk8L3J1bGU+CgoJCQoJPCEtLV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19DT05UUk9MTEkgR0VORVJJQ0lfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fLS0+CgoKCQk8IS0tQ29udHJvbGxvIHVzZSBUZWxlY29tLS0+CgkJPHJ1bGUgY29udGV4dD0iLy9obDc6dGVsZWNvbSI+CgkJCTxhc3NlcnQgdGVzdD0iKGNvdW50KEB1c2UpPTEpIgoJCQk+RVJST1JFLTMyfCBM4oCZZWxlbWVudG8gJ3RlbGVjb20nIERFVkUgY29udGVuZXJlIGwnYXR0cmlidXRvIEB1c2UgPC9hc3NlcnQ+CgkJPC9ydWxlPgkKCQkKCQk8IS0tIENvbnRyb2xsbyBmb3JtYXRvOiAtLT4KCQk8IS0tY2FtcGkgQ29kaWNlIEZpc2NhbGU6IDE2IGNpZnJlIFtBLVowLTldezE2fSAtLT4KCQk8cnVsZSBjb250ZXh0PSIvL2hsNzppZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjQuMy4yJ10iPgoJCQk8bGV0IG5hbWU9IkNGIiB2YWx1ZT0iQGV4dGVuc2lvbiIvPgoJCQk8YXNzZXJ0IHRlc3Q9Im1hdGNoZXMoQGV4dGVuc2lvbiwgJ1tBLVowLTldezE2fScpIgoJCQk+RVJST1JFLTMzfCBJbCBjb2RpY2UgZmlzY2FsZSAnPHZhbHVlLW9mIHNlbGVjdD0iJENGIi8+JyBjaXR0YWRpbm8gZWQgb3BlcmF0b3JlIGRldmUgZXNzZXJlIGNvc3RpdHVpdG8gZGEgMTYgY2lmcmUgW0EtWjAtOV17MTZ9PC9hc3NlcnQ+CgkJPC9ydWxlPgoJCgkJPCEtLUNvbnRyb2xsbyBzdWdsaSBhdHRyaWJ1dGkgZGkgb2JzZXJ2YXRpb24tLT4KCQk8cnVsZSBjb250ZXh0PSIvL2hsNzpvYnNlcnZhdGlvbiI+CgkJCTxsZXQgbmFtZT0ibW9vZENkIiB2YWx1ZT0iQG1vb2RDb2RlIi8+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoQGNsYXNzQ29kZSk9MSIKCQkJPkVSUk9SRS0zNHwgTCdhdHRyaWJ1dG8gIkBjbGFzc0NvZGUiIGRlbGwnZWxlbWVudG8gIm9ic2VydmF0aW9uIiBkZXZlIGVzc2VyZSBwcmVzZW50ZSA8L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSIkbW9vZENkPSdFVk4nIgoJCQk+RVJST1JFLTM1fCBMJ2F0dHJpYnV0byAiQG1vb2RDb2RlIiBkZWxsJ2VsZW1lbnRvICJvYnNlcnZhdGlvbiIgZGV2ZSBlc3NlcmUgdmFsb3JpenphdG8gY29uICJFVk4iIDwvYXNzZXJ0PgoJCTwvcnVsZT4KCgkJCgkJCgkJCgkJPCEtLV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19CT0RZX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18tLT4KCQoJCQoJCQoJCTxydWxlIGNvbnRleHQ9ImhsNzpDbGluaWNhbERvY3VtZW50L2hsNzpjb21wb25lbnQvaGw3OnN0cnVjdHVyZWRCb2R5L2hsNzpjb21wb25lbnQiPgoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzZWN0aW9uW0BjbGFzc0NvZGU9J0RPQ1NFQ1QnXVtAbW9vZENvZGU9J0VWTiddKT0xIgoJCQk+RVJST1JFLWIxfCBMYSBzZWN0aW9uIERFVkUgY29udGVuZXJlIGdsaSBhdHRyaWJ1dGkgQGNsYXNzQ29kZT0nRE9DU0VDVCcgQG1vb2RDb2RlPSdFVk4nLjwvYXNzZXJ0PgoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzZWN0aW9uL2hsNzp0ZW1wbGF0ZUlkKT0wIG9yIGNvdW50KGhsNzpzZWN0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS4zLjEnXSk9MSIKCQkJPkVSUk9SRS1iMnwgTCdlbGVtZW50byBzZWN0aW9uIERFVkUgY29udGVuZXJlIHVuIGVsZW1lbnRvICd0ZW1wbGF0ZUlkJyB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjMuMScgPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnNlY3Rpb24vaGw3OmNvZGUpPTAgb3IgY291bnQoaGw3OnNlY3Rpb24vaGw3OmNvZGVbQGNvZGU9JzExMzY5LTYnXVtAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi4xJ10pPTEiCgkJCT5FUlJPUkUtYjN8IEwnZWxlbWVudG8gc2VjdGlvbi9jb2RlIERFVkUgY29udGVuZXJlIGdsaSBhdHRyaWJ1dGkgdmFsb3JpenphdGkgbmVsIHNlZ3VlbnRlIG1vZG86IEBjb2RlPScxMTM2OS02JyBlIEBjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEnLjwvYXNzZXJ0PgoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzZWN0aW9uL2hsNzp0aXRsZSk9MSIKCQkJPkVSUk9SRS1iNHwgTCdlbGVtZW50byBzZWN0aW9uIERFVkUgY29udGVuZXJlIHVuIGVsZW1lbnRvICd0aXRsZScuPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnNlY3Rpb24vaGw3OnRleHQpPTEiCgkJCT5FUlJPUkUtYjV8IEwnZWxlbWVudG8gc2VjdGlvbiBERVZFIGNvbnRlbmVyZSB1biBlbGVtZW50byAndGV4dCcuPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnNlY3Rpb24vaGw3OmVudHJ5KT0xIgoJCQk+RVJST1JFLWI2fCBMJ2VsZW1lbnRvIHNlY3Rpb24gREVWRSBjb250ZW5lcmUgdW4gc29sbyBlbGVtZW50byAnZW50cnknIHJlbGF0aXZvIGFkIHVubyBkZWkgc2VndWVudGkgY2FzaToKCQkJLSAiRGF0aSBWYWNjaW5hemlvbmUiCgkJCS0gIkVzb25lcm8vb21pc3Npb25lIG8gZGlmZmVyaW1lbnRvIi48L2Fzc2VydD4KCQk8L3J1bGU+CgkJPCEtLWNvbnRyb2xsbyBzdWxsYSBlbnRyeS0tPgoJCQoJCTxydWxlIGNvbnRleHQ9ImhsNzpDbGluaWNhbERvY3VtZW50L2hsNzpjb21wb25lbnQvaGw3OnN0cnVjdHVyZWRCb2R5L2hsNzpjb21wb25lbnQvaGw3OnNlY3Rpb24vaGw3OmVudHJ5Ij4KCQkJCgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uW0BjbGFzc0NvZGU9J1NCQURNJ11bQG1vb2RDb2RlPSdFVk4nXSk9MSIKCQkJPkVSUk9SRS1iN3wgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbiBERVZFIGF2ZXJlIGdsaSBhdHRyaWJ1dGkgdmFsb3JpenphdGkgY29uIEBjbGFzc0NvZGU9J1NCQURNJyBlIEBtb29kQ29kZT0nRVZOJy48L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddKT0xIG9yIAoJCQljb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMiddKT0xIgoJCQk+RVJST1JFLWI4fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uIERFVkUgY29udGVuZXJlIHVuIGVsZW1lbnRvICd0ZW1wbGF0ZUlkJyB2YWxvcml6emF0byBjb24gdW5vIGRlaSBzZWd1ZW50aSBtb2RpOgoJCQktIEByb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjEnIHBlciAiRGF0aSBWYWNjaW5hemlvbmUiCgkJCS0gQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMicgcGVyICJFc29uZXJvL29taXNzaW9uZSBvIGRpZmZlcmltZW50byIuPC9hc3NlcnQ+CgkJCQoJCQk8IS0tRGF0aSB2YWNjaW5hemlvbmUtLT4KCQkJCgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjEnXSk9MCBvciAKCQkJY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uW2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjEnXV0vaGw3OnN0YXR1c0NvZGVbQGNvZGU9J2NvbXBsZXRlZCddKT0xIgoJCQk+RVJST1JFLWI5fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uIERFVkUgY29udGVuZXJlIHVuIGVsZW1lbnRvICdzdGF0dXNDb2RlJyB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQGNvZGU9J2NvbXBsZXRlZCcuPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjEnXSk9MCBvciAKCQkJY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uW2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjEnXV0vaGw3OmVmZmVjdGl2ZVRpbWUpPTEiCgkJCT5FUlJPUkUtYjEwfCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uIERFVkUgY29udGVuZXJlIHVuIGVsZW1lbnRvICdlZmZlY3RpdmVUaW1lJy48L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddKT0wIG9yIAoJCQljb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddXS9obDc6Y29uc3VtYWJsZVtAdHlwZUNvZGU9J0NTTSddKT0xIgoJCQk+RVJST1JFLWIxMXwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbiBERVZFIGNvbnRlbmVyZSB1biBlbGVtZW50byAnY29uc3VtYWJsZScgY29uIGwnYXR0cmlidXRvIEB0eXBlQ29kZT0nQ1NNJyB2YWxvcml6emF0by48L2Fzc2VydD4KCQkJCQkJCgkJCTxyZXBvcnQgdGVzdD0ibm90KGNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4xJ10pPTApIGFuZCAKCQkJbm90KGNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4xJ11dL2hsNzpyb3V0ZUNvZGUpPTEpIgoJCQk+VzAwM3wgU2kgY29uc2lnbGlhIGRpIHZhbG9yaXp6YXJlIGxhIHZpYSBkaSBzb21taW5pc3RyYXppb25lIHRyYW1pdGUgbCdlbGVtZW50byAncm91dGVDb2RlJy4tLT4gPC9yZXBvcnQ+IAkKCQkJPHJlcG9ydCB0ZXN0PSJub3QoY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjEnXSk9MCkgYW5kIAoJCQlub3QoY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uW2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjEnXV0vaGw3OmFwcHJvYWNoU2l0ZUNvZGUpPTEpIgoJCQk+VzAwNHwgU2kgY29uc2lnbGlhIGRpIHZhbG9yaXp6YXJlIGxhIHNlZGUgYW5hdG9taWNhIGRpIHNvbW1pbmlzdHJhemlvbmUgdHJhbWl0ZSBsJ2VsZW1lbnRvICdhcHByb2FjaFNpdGVDb2RlJyAuLS0+IDwvcmVwb3J0PgkJCQoJCQk8cmVwb3J0IHRlc3Q9Im5vdChjb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddKT0wKSBhbmQgCgkJCW5vdChjb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddXS9obDc6ZG9zZVF1YW50aXR5KT0xKSIKCQkJPlcwMDV8IFNpIGNvbnNpZ2xpYSBkaSB2YWxvcml6emFyZSBsYSBkb3NlIHNvbW1pbmlzdHJhdGEgdHJhbWl0ZSBsJ2VsZW1lbnRvICdkb3NlUXVhbnRpdHknLi0tPiA8L3JlcG9ydD4KCQkJCgkJCTxsZXQgbmFtZT0iZmFybWEiIHZhbHVlPSJobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OmNvbnN1bWFibGUvaGw3Om1hbnVmYWN0dXJlZFByb2R1Y3QvaGw3Om1hbnVmYWN0dXJlZE1hdGVyaWFsIi8+CgkJCTxhc3NlcnQgdGVzdD0iKGNvdW50KCRmYXJtYS9obDc6Y29kZVtAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjYuMS41J10pPTEpIgoJCQk+RVJST1JFLWIxMnxMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL3RlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddIHNlIHByZXNlbnRlLCBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIGNvbnN1bWFibGUvbWFudWZhY3R1cmVkUHJvZHVjdC9tYW51ZmFjdHVyZWRNYXRlcmlhbC9jb2RlIHZhbG9yaXp6YXRvIHNlY29uZG8gaSBzZWd1ZW50aSBzaXN0ZW1pIGRpIGNvZGlmaWNhOgoJCQktIEBjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My4yLjkuNi4xLjUnIAkoQUlDKQoJCQk8L2Fzc2VydD4JCQoJCQkKCQkJPCEtLUNvbnRyb2xsbyBpbmNyb2NpYXRvIHRyYSBjb2RlIGUgdHJhbnNsYXRpb24tLT4KCQkJPGFzc2VydCB0ZXN0PSIoY291bnQoJGZhcm1hL2hsNzpjb2RlL2hsNzp0cmFuc2xhdGlvbik9MCBvciAKCQkJY291bnQoJGZhcm1hL2hsNzpjb2RlL2hsNzp0cmFuc2xhdGlvbltAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi43MyddKT0xKSIKCQkJPkVSUk9SRS1iMTN8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vY29uc3VtYWJsZS9tYW51ZmFjdHVyZWRQcm9kdWN0L21hbnVmYWN0dXJlZE1hdGVyaWFsL2NvZGUvdHJhbnNsYXRpb24gZGV2ZSBlc3NlcmUgdmFsb3JpenphdG8gc2Vjb25kbyBpIHNlZ3VlbnRpIHNpc3RlbWkgZGkgY29kaWZpY2E6CgkJCS0gQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuNzMnCQkoQVRDKQoJCQk8L2Fzc2VydD4KCQkJPGxldCBuYW1lPSJjb25zdW0iIHZhbHVlPSJobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddXS9obDc6Y29uc3VtYWJsZS9obDc6bWFudWZhY3R1cmVkUHJvZHVjdCIvPgoJCQk8YXNzZXJ0IHRlc3Q9Iihjb3VudCgkY29uc3VtL2hsNzptYW51ZmFjdHVyZXJPcmdhbml6YXRpb24pPTAgb3IKCQkJY291bnQoJGNvbnN1bS9obDc6bWFudWZhY3R1cmVyT3JnYW5pemF0aW9uL2hsNzpuYW1lKSZndDs9MSkiCgkJCT5FUlJPUkUtYjE0fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2NvbnN1bWFibGUvbWFudWZhY3R1cmVkUHJvZHVjdC9tYW51ZmFjdHVyZXJPcmdhbml6YXRpb24gREVWRSBjb250ZW5lcmUgYWxtZW5vIHVuIGVsZW1lbnRvICduYW1lJy48L2Fzc2VydD4KCQkJCgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzpwYXJ0aWNpcGFudCk9MCBvciAoY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzpwYXJ0aWNpcGFudFtAdHlwZUNvZGU9J0xPQyddKT49MSkiCgkJCT5FUlJPUkUtYjE1fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL3BhcnRpY2lwYW50IERFVkUgZXNzZXJlIHZhbG9yaXp6YXRvIGNvbiBsJ2F0dHJpYnV0byBAdHlwZUNvZGU9J0xPQyc8L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OnBhcnRpY2lwYW50L2hsNzpwYXJ0aWNpcGFudFJvbGUvQGNsYXNzQ29kZSk9MCBvciAKCQkJKGNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6cGFydGljaXBhbnQvaGw3OnBhcnRpY2lwYW50Um9sZVtAY2xhc3NDb2RlPSdST0wnXSk+PTEpIgoJCQk+RVJST1JFLWIxNnwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9wYXJ0aWNpcGFudC9wYXJ0aWNpcGFudFJvbGUgREVWRSBlc3NlcmUgdmFsb3JpenphdG8gY29uIGwnYXR0cmlidXRvIEB0eXBlQ29kZT0nUk9MJzwvYXNzZXJ0PgoJCQoJCQkJPCEtLWVudHJ5UmVsYXRpb25zaGlwIHJlbGF0aXZhIGFsIG51bWVybyBkaSBkb3NlLS0+CgkJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6ZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdTVUJKJ11bQGludmVyc2lvbkluZD0ndHJ1ZSddKSZsdDs9MSIKCQkJCT5FUlJPUkUtYjE3fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2VudHJ5UmVsYXRpb25zaGlwIHJlbGF0aXZvIGFsICJOdW1lcm8gZGkgZG9zZSIgcHXDsiBlc3NlcmUgcHJlc2VudGUgdW5hIHZvbHRhIHNvbGEuPC9hc3NlcnQ+CQkJCgkJCQkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1NVQkonXVtAaW52ZXJzaW9uSW5kPSd0cnVlJ10pPTAgb3IgCgkJCQljb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OmVudHJ5UmVsYXRpb25zaGlwW0B0eXBlQ29kZT0nU1VCSiddW0BpbnZlcnNpb25JbmQ9J3RydWUnXS9obDc6b2JzZXJ2YXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMyddKT0xIgoJCQkJPkVSUk9SRS1iMTh8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXAvb2JzZXJ2YXRpb24gKE51bWVybyBkb3NlKSBERVZFIGNvbnRlbmVyZSB1biBlbGVtZW50byAndGVtcGxhdGVJZCcgdmFsb3JpenphdG8gY29uIEByb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjMnPC9hc3NlcnQ+CQkJCgkJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6ZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdTVUJKJ11bQGludmVyc2lvbkluZD0ndHJ1ZSddKT0wIG9yICAKCQkJCWNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6ZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdTVUJKJ10vaGw3Om9ic2VydmF0aW9uL2hsNzpjb2RlW0Bjb2RlPSczMDk3My0yJ11bQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMSddKT0xIgoJCQkJPkVSUk9SRS1iMTl8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXAvb2JzZXJ2YXRpb24gKE51bWVybyBkb3NlKSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvICdjb2RlJyB2YWxvcml6emF0byBjb24gZ2xpIGF0dHJpYnV0aSBAY29kZT0nMzA5NzMtMicgZSBAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi4xJy48L2Fzc2VydD4JCQkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1NVQkonXVtAaW52ZXJzaW9uSW5kPSd0cnVlJ10pPTAgb3IgCgkJCQljb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OmVudHJ5UmVsYXRpb25zaGlwW0B0eXBlQ29kZT0nU1VCSiddL2hsNzpvYnNlcnZhdGlvbi9obDc6c3RhdHVzQ29kZVtAY29kZT0nY29tcGxldGVkJ10pPTEiCgkJCQk+RVJST1JFLWIyMHwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcC9vYnNlcnZhdGlvbiAoTnVtZXJvIGRvc2UpIERFVkUgY29udGVuZXJlIGwnZWxlbWVudG8gJ3N0YXR1c0NvZGUnIHZhbG9yaXp6YXRvIGNvbiBsJ2F0dHJpYnV0byBAY29kZT0nY29tcGxldGVkJy48L2Fzc2VydD4JCQkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1NVQkonXVtAaW52ZXJzaW9uSW5kPSd0cnVlJ10pPTAgb3IgCgkJCQljb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OmVudHJ5UmVsYXRpb25zaGlwW0B0eXBlQ29kZT0nU1VCSiddL2hsNzpvYnNlcnZhdGlvbi9obDc6dmFsdWVbQHhzaTp0eXBlPSdJTlQnXSk9MSIKCQkJCT5FUlJPUkUtYjIxfCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2VudHJ5UmVsYXRpb25zaGlwL29ic2VydmF0aW9uIChOdW1lcm8gZG9zZSkgREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byB2YWx1ZSB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQHhzaTp0eXBlPSdJTlQnLjwvYXNzZXJ0PgoJCQkJCQoJCQkJCgkJCQk8IS0tZW50cnlSZWxhdGlvbnNoaXAgcmVsYXRpdmEgYWwgcGVyaW9kbyBkaSBjb3BlcnR1cmEvIGRhdGEgcHJvc3NpbW8gdmFjY2luby0tPgoJCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddXS9obDc6ZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdSRUZSJ10pJmx0Oz0yIgoJCQkJPkVSUk9SRS1iMjJ8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXAgcmVsYXRpdm8gYWwgIlBlcmlvZG8gZGkgQ29wZXJ0dXJhIC9wcm9zc2ltbyBhcHB1bnRhbWVudG8iIHB1w7IgZXNzZXJlIHByZXNlbnRlIGFsIHBpw7kgZHVlIHZvbHRlLjwvYXNzZXJ0PgkJCQoJCQkJCgkJCQkKCQkJCTwhLS1lbnRyeVJlbGF0aW9uc2hpcCByZWxhdGl2YSBhbGxhIGNhdGVnb3JpZSBhIHJpc2NoaW8tLT4KCQkJCTxsZXQgbmFtZT0icmlzayIgdmFsdWU9ImhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4xJ11dL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXS9obDc6b2JzZXJ2YXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuNSddXSIvPgoJCQkJCgkJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4xJ10pPTAgb3IgCgkJCQljb3VudCgkcmlzaykmbHQ7PTEiCgkJCQk+RVJST1JFLWIyM3wgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcC9vYnNlcnZhdGlvbiAoQ2F0ZWdvcmllIGEgcmlzY2hpbykgREVWRSBjb250ZW5lcmUgdW4gZWxlbWVudG8gJ3RlbXBsYXRlSWQnIHZhbG9yaXp6YXRvIGNvbiBAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC41JzwvYXNzZXJ0PgkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoJHJpc2spPTAgb3IgCgkJCQljb3VudCgkcmlzay9obDc6Y29kZVtAY29kZT0nOTU3MTUtOSddW0Bjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEnXSk9MSIKCQkJCT5FUlJPUkUtYjI0fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2VudHJ5UmVsYXRpb25zaGlwIChDYXRlZ29yaWUgYSByaXNjaGlvKSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIGNvZGUgdmFsb3JpenphdG8gY29uIGdsaSBhdHRyaWJ1dGkgQGNvZGU9Jzk1NzE1LTknIGUgQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMScuPC9hc3NlcnQ+CQkJCgkJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KCRyaXNrKT0wIG9yIAoJCQkJY291bnQoJHJpc2svaGw3OnN0YXR1c0NvZGVbQGNvZGU9J2NvbXBsZXRlZCddKT0xIgoJCQkJPkVSUk9SRS1iMjV8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXAgKENhdGVnb3JpZSBhIHJpc2NoaW8pIERFVkUgY29udGVuZXJlIGwnZWxlbWVudG8gc3RhdHVzQ29kZSB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQGNvZGU9J2NvbXBsZXRlZCcuPC9hc3NlcnQ+CQkJCgkJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KCRyaXNrKT0wIG9yIAoJCQkJY291bnQoJHJpc2svaGw3OnZhbHVlW0B4c2k6dHlwZT0nQ0QnXSk9MSIKCQkJCT5FUlJPUkUtYjI2fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2VudHJ5UmVsYXRpb25zaGlwIChDYXRlZ29yaWUgYSByaXNjaGlvKSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIHZhbHVlIHZhbG9yaXp6YXRvIGNvbiBsJ2F0dHJpYnV0byBAeHNpOnR5cGU9J0NEJy48L2Fzc2VydD4KCQoJCQoJCQkJPCEtLWVudHJ5UmVsYXRpb25zaGlwIHJlbGF0aXZhIGFsbGEgY29uZGl6aW9uaSBzYW5pdGFyaWUgYSByaXNjaGlvLS0+CgkJCQk8bGV0IG5hbWU9ImNvbmQiIHZhbHVlPSJobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddXS9obDc6ZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdSU09OJ10vaGw3Om9ic2VydmF0aW9uW2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjYnXV0iLz4KCQkJCQoJCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddKT0wIG9yIAoJCQkJY291bnQoJGNvbmQpJmx0Oz0xIgoJCQkJPkVSUk9SRS1iMjd8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXAgKGNvbmRpemlvbmkgc2FuaXRhcmllIGEgcmlzY2hpbykgREVWRSBjb250ZW5lcmUgdW4gZWxlbWVudG8gJ3RlbXBsYXRlSWQnIHZhbG9yaXp6YXRvIGNvbiBAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC42JzwvYXNzZXJ0PgkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoJGNvbmQpPTAgb3IgCgkJCQljb3VudCgkY29uZC9obDc6Y29kZVtAY29kZT0nNTk3ODUtNiddW0Bjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEnXSk9MSIKCQkJCT5FUlJPUkUtYjI4fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2VudHJ5UmVsYXRpb25zaGlwIChjb25kaXppb25pIHNhbml0YXJpZSBhIHJpc2NoaW8pIERFVkUgY29udGVuZXJlIGwnZWxlbWVudG8gY29kZSB2YWxvcml6emF0byBjb24gZ2xpIGF0dHJpYnV0aSBAY29kZT0nNTk3ODUtNicgZSBAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi4xJy48L2Fzc2VydD4JCQkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoJGNvbmQpPTAgb3IgCgkJCQljb3VudCgkY29uZC9obDc6c3RhdHVzQ29kZVtAY29kZT0nY29tcGxldGVkJ10pPTEiCgkJCQk+RVJST1JFLWIyOXwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcCAoY29uZGl6aW9uaSBzYW5pdGFyaWUgYSByaXNjaGlvKSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIHN0YXR1c0NvZGUgdmFsb3JpenphdG8gY29uIGwnYXR0cmlidXRvIEBjb2RlPSdjb21wbGV0ZWQnLjwvYXNzZXJ0PgkJCQoJCQkJPGFzc2VydCB0ZXN0PSJjb3VudCgkY29uZCk9MCBvciAKCQkJCWNvdW50KCRjb25kL2hsNzp2YWx1ZVtAeHNpOnR5cGU9J0NEJ11bQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMTAzJ10pPTEiCgkJCQk+RVJST1JFLWIzMHwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcCAoY29uZGl6aW9uaSBzYW5pdGFyaWUgYSByaXNjaGlvKSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIHZhbHVlIHZhbG9yaXp6YXRvIGNvbiBsJ2F0dHJpYnV0byBAeHNpOnR5cGU9J0NEJyBlIEBjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEwMycuPC9hc3NlcnQ+CgkJCQkKCQkJCTwhLS1lbnRyeVJlbGF0aW9uc2hpcCByZWxhdGl2YSBhbGxlIHJlYXppb25pIGF2dmVyc2UtLT4KCQkJCTxsZXQgbmFtZT0icmVhY3Rpb24iIHZhbHVlPSJobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMSddXS9obDc6ZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdDQVVTJ10iLz4KCQkJCQoJCQkJPGFzc2VydCB0ZXN0PSJjb3VudCgkcmVhY3Rpb24pPTAgb3IgCgkJCQljb3VudCgkcmVhY3Rpb24vaGw3Om9ic2VydmF0aW9uW2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjgnXV0pPTEiCgkJCQk+RVJST1JFLWIzMXwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcCAocmVhemlvbmkgYXZ2ZXJzZSkgREVWRSBjb250ZW5lcmUgdW4gZWxlbWVudG8gJ3RlbXBsYXRlSWQnIHZhbG9yaXp6YXRvIGNvbiBAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC44Jy48L2Fzc2VydD4JCQoJCQkJPGFzc2VydCB0ZXN0PSJjb3VudCgkcmVhY3Rpb24pPTAgb3IgCgkJCQljb3VudCgkcmVhY3Rpb24vaGw3Om9ic2VydmF0aW9uL2hsNzpjb2RlW0Bjb2RlPSczMTA0NC0xJ11bQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMSddKT0xIgoJCQkJPkVSUk9SRS1iMzJ8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXAgKHJlYXppb25pIGF2dmVyc2UpIERFVkUgY29udGVuZXJlIGwnZWxlbWVudG8gY29kZSB2YWxvcml6emF0byBjb24gZ2xpIGF0dHJpYnV0aSBAY29kZT0nMzEwNDQtMScgZSBAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi4xJy48L2Fzc2VydD4JCQkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoJHJlYWN0aW9uKT0wIG9yIAoJCQkJY291bnQoJHJlYWN0aW9uL2hsNzpvYnNlcnZhdGlvbi9obDc6c3RhdHVzQ29kZVtAY29kZT0nY29tcGxldGVkJ10pPTEiCgkJCQk+RVJST1JFLWIzM3wgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcCAocmVhemlvbmkgYXZ2ZXJzZSkgREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byBzdGF0dXNDb2RlIHZhbG9yaXp6YXRvIGNvbiBsJ2F0dHJpYnV0byBAY29kZT0nY29tcGxldGVkJy48L2Fzc2VydD4JCQkJCQkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoJHJlYWN0aW9uL2hsNzpvYnNlcnZhdGlvbi9obDc6dmFsdWUpPTAgb3IgCgkJCQljb3VudCgkcmVhY3Rpb24vaGw3Om9ic2VydmF0aW9uL2hsNzp2YWx1ZVtAeHNpOnR5cGU9J0NEJ11bQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMTAzJ10pPTEiCgkJCQk+RVJST1JFLWIzNHwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcC9vYnNlcnZhdGlvbi92YWx1ZSAocmVhemlvbmkgYXZ2ZXJzZSkgREVWRSBlc3NlcmUgdmFsb3JpenphdG8gc2Vjb25kbyBpbCBzaXN0ZW1hIGRpIGNvZGlmaWNhIElDRDktQ00gKEBjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEwMycpLjwvYXNzZXJ0PgoJCQkJCgkJCQoJCQk8IS0tZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24gZGF0aSBlc29uZXJvL29taXNzaW9uZSBvIGRpZmZlcmltZW50by0tPgoJCQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ10pPTAgb3IgCgkJCWNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ11dL2hsNzpzdGF0dXNDb2RlW0Bjb2RlPSdjYW5jZWxsZWQnXSk9MSIKCQkJPkVSUk9SRS1iMzV8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vdGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ10gREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byBzdGF0dXNDb2RlIHZhbG9yaXp6YXRvIGNvbiBsJ2F0dHJpYnV0byBAY29kZT0nY2FuY2VsbGVkJy48L2Fzc2VydD4JCQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ10pPTAgb3IgCgkJCWNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ11dL2hsNzplZmZlY3RpdmVUaW1lKT0xIgoJCQk+RVJST1JFLWIzNnwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi90ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjInXSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIGVmZmVjdGl2ZVRpbWUuPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjInXSk9MCBvciAKCQkJY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uW2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjInXV0vaGw3OmNvbnN1bWFibGVbQHR5cGVDb2RlPSdDU00nXSk9MSIKCQkJPkVSUk9SRS1iMzd8TCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi90ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjInXSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIGNvbnN1bWFibGUgY29uIGwnYXR0cmlidXRvIEB0eXBlQ29kZT0nQ1NNJyB2YWxvcml6emF0byAuPC9hc3NlcnQ+CgkJCQoJCQkJPCEtLWVudHJ5UmVsYXRpb25zaGlwIHJhZ2lvbmUgZXNvbmVyby9vbWlzc2lvbmUgbyBkaWZmZXJpbWVudG8tLT4KCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjInXSk9MCBvciAKCQkJCWNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ11dL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXVtobDc6b2JzZXJ2YXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMTAnXV0pPTEiCgkJCQk+RVJST1JFLWIzOHwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXSBERVZFIGF2ZXJlIGwnZWxlbWVudG8gdGVtcGxhdGVJZCB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMTAnLjwvYXNzZXJ0PgkJCQkJCQoJCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMiddKT0wIG9yIAoJCQkJY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uW2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjInXV0vaGw3OmVudHJ5UmVsYXRpb25zaGlwW0B0eXBlQ29kZT0nUlNPTiddL2hsNzpvYnNlcnZhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4xMCddXS9obDc6Y29kZVtAY29kZT0nODU3MTQtNCddW0Bjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEnXSk9MSIKCQkJCT5FUlJPUkUtYjM5fCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2VudHJ5UmVsYXRpb25zaGlwW0B0eXBlQ29kZT0nUlNPTiddICBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIG9ic2VydmF0aW9uL2NvZGUgdmFsb3JpenphdG8gY29uIGdsaSBhdHRyaWJ1dGkgQGNvZGU9Jzg1NzE0LTQnIGUgQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMScuPC9hc3NlcnQ+CQkJCQkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjInXSk9MCBvciAKCQkJCWNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ11dL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXS9obDc6b2JzZXJ2YXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMTAnXV0vaGw3OnN0YXR1c0NvZGVbQGNvZGU9J2NvbXBsZXRlZCddKT0xIgoJCQkJPkVSUk9SRS1iNDB8IEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdSU09OJ10gIERFVkUgY29udGVuZXJlIGwnZWxlbWVudG8gb2JzZXJ2YXRpb24vc3RhdHVzQ29kZSB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQGNvZGU9J2NvbXBsZXRlZCcuPC9hc3NlcnQ+CQkJCgkJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ10pPTAgb3IgCgkJCQljb3VudChobDc6c3Vic3RhbmNlQWRtaW5pc3RyYXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMiddXS9obDc6ZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdSU09OJ10vaGw3Om9ic2VydmF0aW9uW2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjEwJ11dL2hsNzplZmZlY3RpdmVUaW1lL2hsNzpsb3cpPTEiCgkJCQk+RVJST1JFLWI0MXwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIG9ic2VydmF0aW9uL2VmZmVjdGl2ZVRpbWUvbG93LjwvYXNzZXJ0PgkJCQkKCQkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjInXSk9MCBvciAKCQkJCWNvdW50KGhsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ11dL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXS9obDc6b2JzZXJ2YXRpb25baGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMTAnXV0vaGw3OmVmZmVjdGl2ZVRpbWUvaGw3OmhpZ2gpPTEiCgkJCQk+RVJST1JFLWI0MnwgTCdlbGVtZW50byBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9lbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXSBERVZFIGNvbnRlbmVyZSBsJ2VsZW1lbnRvIG9ic2VydmF0aW9uL2VmZmVjdGl2ZVRpbWUvaGlnaC48L2Fzc2VydD4JCQkJCgkJCgkJCgkJPC9ydWxlPgoJCQoJCQoJCTxydWxlIGNvbnRleHQ9ImhsNzpDbGluaWNhbERvY3VtZW50L2hsNzpjb21wb25lbnQvaGw3OnN0cnVjdHVyZWRCb2R5L2hsNzpjb21wb25lbnQvaGw3OnNlY3Rpb24vaGw3OmVudHJ5L2hsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4xJ11dL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JFRlInXSI+CgkJCQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpvYnNlcnZhdGlvbi9obDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC40J10pPTEiCgkJCT5FUlJPUkUtYjQzfCBMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2VudHJ5UmVsYXRpb25zaGlwL29ic2VydmF0aW9uIChQZXJpb2RvIGRpIGNvcGVydHVyYS9wcm9zc2ltbyBhcHB1bnRhbWVudG8pIERFVkUgY29udGVuZXJlIHVuIGVsZW1lbnRvICd0ZW1wbGF0ZUlkJyB2YWxvcml6emF0byBjb24gQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuNCcuPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iKGNvdW50KGhsNzpvYnNlcnZhdGlvbi9obDc6Y29kZVtAY29kZT0nNTk3NzgtMSddW0Bjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEnXSk9MSBvcgoJCQljb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OmNvZGVbQGNvZGU9JzU5Nzc4LTEnXVtAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNC42NDIuMy4zMDgnXSk9MSkgb3IKCQkJKGNvdW50KGhsNzpvYnNlcnZhdGlvbi9obDc6Y29kZVtAY29kZT0nMzA5ODAtNyddW0Bjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEnXSk9MSBvcgoJCQljb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OmNvZGVbQGNvZGU9JzMwOTgwLTcnXVtAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNC42NDIuMy4zMDgnXSk9MSkiCgkJCT5FUlJPUkUtYjQ0fEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXAgdmFsb3JpenphdG8gY29uIGwnYXR0cmlidXRvIEB0eXBlQ29kZT0nUkVGUicgREVWRSBhdmVyZSBsJ2xlbWVudG8gb2JzZXJ2YXRpb24vY29kZSB2YWxvcml6emF0byBjb24gaSBzZWd1ZW50aSBhdHRyaWJ1dGk6CgkJCS0gQGNvZGU9JzU5Nzc4LTEnIGNvbiBpIHNlZ3VlbnRpIHNpc3RlbWkgZGkgY29kaWZpY2EgQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMScgbyBAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNC42NDIuMy4zMDgnIChQZXJpb2RvIGRpIENvcGVydHVyYSkKCQkJLSBAY29kZT0nMzA5ODAtNycgY29uIGkgc2VndWVudGkgc2lzdGVtaSBkaSBjb2RpZmljYSBAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi4xJyBvIEBjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My40LjY0Mi4zLjMwOCcgKFNjaGVkdWxhemlvbmUgcHJvc3NpbW8gVmFjY2lubykKCQkJPC9hc3NlcnQ+CQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpvYnNlcnZhdGlvbi9obDc6c3RhdHVzQ29kZVtAY29kZT0nY29tcGxldGVkJ10pPTEiCgkJCT5FUlJPUkUtYjQ1fEwnZWxlbWVudG8gZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24vZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdSRUZSJ10gREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byBzdGF0dXNDb2RlIHZhbG9yaXp6YXRvIHNlbXByZSBjb24gaWwgY29kZSAnY29tcGxldGVkJy48L2Fzc2VydD4JCgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3Om9ic2VydmF0aW9uL2hsNzp2YWx1ZVtAeHNpOnR5cGU9J0lWTF9UUycgb3IgQHhzaTp0eXBlPSdUUyddKT0xIgoJCQk+RVJST1JFLWI0NnxMJ2VsZW1lbnRvIGVudHJ5L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2VudHJ5UmVsYXRpb25zaGlwW0B0eXBlQ29kZT0nUkVGUiddIERFVkUgY29udGVuZXJlIGwnZWxlbWVudG8gdmFsdWUgdmFsb3JpenphdG8gY29uIGwnYXR0cmlidXRvIEB4c2k6dHlwZT0nSVZMX1RTJyBvIEB4c2k6dHlwZT0nVFMnLjwvYXNzZXJ0PgoJCQkKCQkKCQk8L3J1bGU+CgkJCgkJPCEtLWVudHJ5UmVsYXRpb25zaGlwIHJlbGF0aXZhIGFsbGEgbWFsYXR0aWEgcGVyIGN1aSBzaSBlZmZldHR1YSBsYSB2YWNjaW5hemlvbmUgcmVsYXRpdmEgYWxsYSBlbnRyeS9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbiBkYXRpIHZhY2NpbmF6aW9uZS0tPgoJCTxydWxlIGNvbnRleHQ9ImhsNzpDbGluaWNhbERvY3VtZW50L2hsNzpjb21wb25lbnQvaGw3OnN0cnVjdHVyZWRCb2R5L2hsNzpjb21wb25lbnQvaGw3OnNlY3Rpb24vaGw3OmVudHJ5L2hsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbi9obDc6ZW50cnlSZWxhdGlvbnNoaXBbQHR5cGVDb2RlPSdSU09OJ11baGw3Om9ic2VydmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjknXV0iPgoJCQkKCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OmNvZGVbQGNvZGU9Jzc1MzIzLTYnXVtAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi4xJ10pPTEiCgkJCT5FUlJPUkUtYjQ3fCBMJ2VsZW1lbnRvIG9ic2VydmF0aW9uIChtYWxhdHRpYSBwZXIgY3VpIHNpIGVmZmV0dHVhIGxhIHZhY2NpbmF6aW9uZSkgREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byBjb2RlIHZhbG9yaXp6YXRvIGNvbiBpIHNlZ3VlbnRpIGF0dHJpYnV0aSBAY29kZT0nNzUzMjMtNicgZSBAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi4xJy48L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OnN0YXR1c0NvZGVbQGNvZGU9J2NvbXBsZXRlZCddKT0xIgoJCQk+RVJST1JFLWI0OHwgTCdlbGVtZW50byBvYnNlcnZhdGlvbiAobWFsYXR0aWEgcGVyIGN1aSBzaSBlZmZldHR1YSBsYSB2YWNjaW5hemlvbmUpIERFVkUgY29udGVuZXJlIGwnZWxlbWVudG8gc3RhdHVzQ29kZSB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQGNvZGU9J2NvbXBsZXRlZCcuPC9hc3NlcnQ+CgkJCTxhc3NlcnQgdGVzdD0iY291bnQoaGw3Om9ic2VydmF0aW9uL2hsNzp2YWx1ZVtAeHNpOnR5cGU9J0NEJ10pPTEiCgkJCT5FUlJPUkUtYjQ5fCBMJ2VsZW1lbnRvIG9ic2VydmF0aW9uIChtYWxhdHRpYSBwZXIgY3VpIHNpIGVmZmV0dHVhIGxhIHZhY2NpbmF6aW9uZSkgREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byB2YWx1ZSB2YWxvcml6emF0byBjb24gbCdhdHRyaWJ1dG8gQHhzaTp0eXBlPSdDRCcuPC9hc3NlcnQ+CgkJCQoJCTwvcnVsZT4KCQkKCQk8IS0tZW50cnlSZWxhdGlvbnNoaXAgcmVsYXRpdmEgYWxsYSBtYWxhdHRpYSBjb24gcHJlc3VudGEgaW1tdW5pdMOgIHJlbGF0aXZhIGFsbGEgZW50cnkvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24gZGF0aSBlc29uZXJvL29taXNzaW9uZSBvIGRpZmZlcmltZW50by0tPgoJCTxydWxlIGNvbnRleHQ9ImhsNzpDbGluaWNhbERvY3VtZW50L2hsNzpjb21wb25lbnQvaGw3OnN0cnVjdHVyZWRCb2R5L2hsNzpjb21wb25lbnQvaGw3OnNlY3Rpb24vaGw3OmVudHJ5L2hsNzpzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbltobDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4yJ11dL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXVtobDc6b2JzZXJ2YXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuNyddXSI+CgkJCQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpvYnNlcnZhdGlvbi9obDc6Y29kZVtAY29kZT0nNTk3ODQtOSddW0Bjb2RlU3lzdGVtPScyLjE2Ljg0MC4xLjExMzg4My42LjEnXSk9MSIKCQkJPkVSUk9SRS1iNTB8IEwnZWxlbWVudG8gb2JzZXJ2YXRpb24obWFsYXR0aWEgY29uIHByZXN1bnRhIGltbXVuaXTDoCkgREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byBjb2RlIHZhbG9yaXp6YXRvIGNvbiBpIHNlZ3VlbnRpIGF0dHJpYnV0aSBAY29kZT0nNTk3ODQtOScgZSBAY29kZVN5c3RlbT0nMi4xNi44NDAuMS4xMTM4ODMuNi4xJy48L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OnN0YXR1c0NvZGVbQGNvZGU9J2NvbXBsZXRlZCddKT0xIgoJCQk+RVJST1JFLWI1MXwgTCdlbGVtZW50byBvYnNlcnZhdGlvbiAobWFsYXR0aWEgY29uIHByZXN1bnRhIGltbXVuaXTDoCkgREVWRSBjb250ZW5lcmUgbCdlbGVtZW50byBzdGF0dXNDb2RlIHZhbG9yaXp6YXRvIGNvbiBsJ2F0dHJpYnV0byBAY29kZT0nY29tcGxldGVkJy48L2Fzc2VydD4KCQkJPGFzc2VydCB0ZXN0PSJjb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OnZhbHVlKT0wIG9yIGNvdW50KGhsNzpvYnNlcnZhdGlvbi9obDc6dmFsdWVbQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMTAzJ10pPTEiCgkJCT5FUlJPUkUtYjUyfCBMJ2VsZW1lbnRvIG9ic2VydmF0aW9uL3ZhbHVlIChtYWxhdHRpYSBjb24gcHJlc3VudGEgaW1tdW5pdMOgKSBERVZFIGVzc2VyZSB2YWxvcml6emF0byBzZWNvbmRvIGlsIHNpc3RlbWEgZGkgY29kaWZpY2EgSUNEOS1DTSAoQGNvZGVTeXN0ZW09JzIuMTYuODQwLjEuMTEzODgzLjYuMTAzJykuPC9hc3NlcnQ+CgkJCgkJPC9ydWxlPgoJCQoJCTwhLS1jb250cm9saSB0ZW1wbGF0ZSBFUiBAdHlwZUNvZGU9J1JTT04nLS0+CgkJPHJ1bGUgY29udGV4dD0iaGw3OkNsaW5pY2FsRG9jdW1lbnQvaGw3OmNvbXBvbmVudC9obDc6c3RydWN0dXJlZEJvZHkvaGw3OmNvbXBvbmVudC9obDc6c2VjdGlvbi9obDc6ZW50cnkvaGw3OnN1YnN0YW5jZUFkbWluaXN0cmF0aW9uL2hsNzplbnRyeVJlbGF0aW9uc2hpcFtAdHlwZUNvZGU9J1JTT04nXSI+CgkJCQoJCQk8YXNzZXJ0IHRlc3Q9ImNvdW50KGhsNzpvYnNlcnZhdGlvbi9obDc6dGVtcGxhdGVJZFtAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC41J10pPTEgb3IKCQkJY291bnQoaGw3Om9ic2VydmF0aW9uL2hsNzp0ZW1wbGF0ZUlkW0Byb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjYnXSk9MSBvcgoJCQljb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuNyddKT49MSBvcgoJCQljb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuOSddKT49MSBvcgoJCQljb3VudChobDc6b2JzZXJ2YXRpb24vaGw3OnRlbXBsYXRlSWRbQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuMTAnXSk9MSIKCQkJPkVSUk9SRSBiNTN8IENpYXNjdW5vIGRpIHF1ZXN0aSB0ZW1wbGF0ZUlkIMOoIGNvbnRlbnV0byBpbiB1bmEgZW50cnlSZWxhdGlvbnNoaXAgY29uIGwnYXR0cmlidXRvIEB0eXBlQ29kZT0nUlNPTicuCgkJCS0gQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuNScgKENhdGVnb3JpZSBhIHJpc2NoaW8pCgkJCS0gQHJvb3Q9JzIuMTYuODQwLjEuMTEzODgzLjIuOS4xMC4xLjExLjQuNicgKENvbmRpemlvbmkgc2FuaXRhcmllKQoJCQktIEByb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjcnIChNYWxhdHRpYSBjb24gcHJlc3VudGEgaW1tdW5pdMOgKQoJCQktIEByb290PScyLjE2Ljg0MC4xLjExMzg4My4yLjkuMTAuMS4xMS40LjknIChNYWxhdHRpYSBwZXIgY3VpIHNpIGVmZmV0dHVhIGxhIHZhY2NpbmF6aW9uZSkKCQkJLSBAcm9vdD0nMi4xNi44NDAuMS4xMTM4ODMuMi45LjEwLjEuMTEuNC4xMCcgKFJhZ2lvbmUgZGVsbCdlc29uZXJvKTwvYXNzZXJ0PgoJCQoJCTwvcnVsZT4KCQkKCTwvcGF0dGVybj4KPC9zY2hlbWE+DQo=",
      "subType": "00"
    }
  },
  "version": "3.0",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.11.1.1",
  "last_update_date": {
    "$date": {
      "$numberLong": "1669834480913"
    }
  },
  "deleted": false,
  "last_sync": {
    "$date": {
      "$numberLong": "1669834639781"
    }
  }
},{
  "_id": {
    "$oid": "6387a6f4cb5b861312d95fa8"
  },
  "name_schematron": "schematron_CERT_VACC_v1.3.sch",
  "content_schematron": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "version": "3.0",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.11.1.2",
  "last_update_date": {
    "$date": {
      "$numberLong": "1669834484855"
    }
  },
  "deleted": false,
  "last_sync": {
    "$date": {
      "$numberLong": "1669834639781"
    }
  }
},{
  "_id": {
    "$oid": "6387a6f6cb5b861312d95fa9"
  },
  "name_schematron": "schematron_VPS_v2.7.sch",
  "content_schematron": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "version": "3.0",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.6.1",
  "last_update_date": {
    "$date": {
      "$numberLong": "1669834486548"
    }
  },
  "deleted": false,
  "last_sync": {
    "$date": {
      "$numberLong": "1669834639781"
    }
  }
}]